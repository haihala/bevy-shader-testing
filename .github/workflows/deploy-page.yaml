name: deploy-github-page

on:
  pull_request:
  push:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-web:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly

      - uses: Swatinem/rust-cache@v2

      - name: Install Dependencies
        # Assuming we need these?
        run: |
          sudo apt-get update; sudo apt-get install pkg-config libx11-dev libasound2-dev libudev-dev
          cargo install wasm-bindgen-cli

      - name: Add wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Build Release
        run: |
          cargo build --release --target wasm32-unknown-unknown
          wasm-bindgen --out-name shader-testing --out-dir web/target --target web target/wasm32-unknown-unknown/release/bevy-shader-testing.wasm

      - name: Optimize Wasm
        uses: NiklasEi/wasm-opt-action@v2
        with:
          file: web/target/*.wasm

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "web"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
